=== 配置Mysql主从

==== 环境准备
===== 内网服务器(主)
主机名:: mysql01
IP:: 192.168.122.209
系统版本:: CentOS Stream9


===== 内网服务器(从)
主机名:: mysql02
IP:: 192.168.122.9
系统版本:: CentOS Stream9

==== 基础配置
NOTE: 注意，这里的配置主从的mysql都需要进行操作。

===== 登录mysql并修改密码
[source, bash]
----
#获取Mysql临时密码
grep 'temporary password' /var/log/mysqld.log

#用获取到的临时密码进行登录
mysql -uroot -p'temporary password';

#修改Mysql密码
ALTER USER 'root'@'localhost' IDENTIFIED BY '121b33dAj934J1^Sj9ag';

#刷新配置
FLUSH PRIVILEGES;
----

==== 主Mysql配置

===== 添加配置文件参数
[source, bash]
----
vim /etc/my.cnf

#添加如下配置
[mysqld]
## 同一局域网内注意要唯一
server-id=100  
## 开启二进制日志功能，可以随便取（关键）
log-bin=mysql-bin

#重启Mysql服务
systemctl restart mysqld
----

===== 创建数据同步用户
[source, bash]
----
#登录Mysql
mysql -uroot -p'121b33dAj934J1^Sj9ag';

#创建用户
CREATE USER 'slave'@'%' IDENTIFIED BY '@#$Rfg345634523rft4fa';

#给slave用户赋权
GRANT REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO 'slave'@'%';

#将密码规则修改为：mysql_native_password
ALTER USER 'slave'@'%' IDENTIFIED WITH mysql_native_password BY '@#$Rfg345634523rft4fa';
----

===== 查看主Mysql状态
[source, bash]
----
mysql> show master status;
----

.控制台输出
----
mysql> show master status;
+------------------+----------+--------------+------------------+-------------------+
| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |
+------------------+----------+--------------+------------------+-------------------+
| mysql-bin.000001 |      996 |              |                  |                   |
+------------------+----------+--------------+------------------+-------------------+
1 row in set (0.00 sec)
----
TIP: 请牢记此处的File和Position的字段，后续从连接主时需要使用！

==== 从Mysql配置
[source, bash]
----
vim /etc/my.cnf

#添加如下配置
[mysqld]
## 设置server_id,注意要唯一
server-id=101  
## 开启二进制日志功能，以备Slave作为其它Slave的Master时使用
log-bin=mysql-slave-bin   
## relay_log配置中继日志
relay_log=edu-mysql-relay-bin  

#重启Mysql服务
systemctl restart mysqld
----

===== 连接主Mysql
[source, bash]
----
#登录Mysql
mysql -uroot -p'121b33dAj934J1^Sj9ag';

#连接
change master to master_host='192.168.122.209', master_user='slave', master_password='@#$Rfg345634523rft4fa', master_port=3306, master_log_file='mysql-bin.000001', master_log_pos= 996, master_connect_retry=30;
----

.参数说明
master_host:: Master的地址
master_port:: Master的端口号
master_user:: 用于数据同步的用户
master_password:: 用于同步的用户的密码
master_log_file:: 指定 Slave 从哪个日志文件开始复制数据，即上文中提到的 File 字段的值
master_log_pos:: 从哪个 Position 开始读，即上文中提到的 Position 字段的值
master_connect_retry:: 如果连接失败，重试的时间间隔，单位是秒，默认是60秒

===== 开启主从复制
[source, bash]
----
>start slave
----

===== 查看主从复制状态
[source, bash]
----
show slave status \G;
----
TIP: SlaveIORunning 和 SlaveSQLRunning 都是Yes说明主从复制已经开启。

==== 拓展

===== 主从同步指定数据库
.方法一:Mysql主库二进制日志忽略部分库
[source, bash]
----
#编辑my.cnf,在mysqld字段添加如下内容：
binlog-do-db=xxxx   二进制日志记录的数据库

binlog-ignore-db=xxxx 二进制日志中忽略数据库
 
#修改之后重启生效
service mysql restart
----

.方法二:mysql从库不复制部分库
[source, bash]
----
#编辑my.cnf，在mysqld字段添加如下内容：
 
replicate-do-db    设定需要复制的数据库

replicate-ignore-db 设定需要忽略的复制数据库

replicate-do-table  设定需要复制的表

replicate-ignore-table 设定需要忽略的复制表

replicate-wild-do-table 同replication-do-table功能一样，但是可以通配符

replicate-wild-ignore-table 同replication-ignore-table功能一样，但是可以加通配符
 
#修改后重启数据库生效
service mysql restart
----

===== 主从同步所有库和表，在从mysql执行
[source, bash]
----
STOP SLAVE SQL_THREAD; CHANGE REPLICATION FILTER REPLICATE_DO_DB = (); start SLAVE SQL_THREAD;
----




